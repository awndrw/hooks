{"version":3,"file":"index.module.js","sources":["../src/useIsomorphicLayoutEffect.ts","../src/useEvent.ts","../src/useEventListener.ts","../src/useDocumentEventListener.ts","../src/useWindowEventListener.ts"],"sourcesContent":["import React from 'react';\n\nexport const useIsomorphicLayoutEffect =\n    typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n","import React from 'react';\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect';\n\ntype Callback = (...args: any[]) => any;\n\nexport const useEvent = <C extends Callback>(callback: C): C => {\n    const callbackRef = React.useRef(callback);\n    useIsomorphicLayoutEffect(() => {\n        callbackRef.current = callback;\n    });\n    return React.useMemo(() => callbackRef.current, []);\n};\n","import React from 'react';\nimport { useEvent } from './useEvent';\nimport { EventName, EventListener } from './events';\n\nexport const useEventListener = <\n    K extends EventName<HTMLElementEventMap>,\n    E extends HTMLElement\n>(\n    eventName: K,\n    listener: EventListener<HTMLElementEventMap, K>,\n    element: React.RefObject<E>\n) => {\n    const stableListener = useEvent(listener);\n    React.useEffect(() => {\n        const node = element.current;\n        if (!node || !node.addEventListener) {\n            return;\n        }\n        node.addEventListener(eventName, stableListener);\n        return () => node.addEventListener(eventName, stableListener);\n    }, [element, eventName, stableListener]);\n};\n","import React from 'react';\nimport { useEvent } from './useEvent';\nimport { EventName, EventListener } from './events';\n\nexport const useDocumentEventListener = <K extends EventName<DocumentEventMap>>(\n    eventName: K,\n    listener: EventListener<DocumentEventMap, K>\n) => {\n    const stableListener = useEvent(listener);\n    React.useEffect(() => {\n        if (!document || !document.addEventListener) {\n            return;\n        }\n        document.addEventListener(eventName, stableListener);\n        return () => document.addEventListener(eventName, stableListener);\n    }, [eventName, stableListener]);\n};\n","import React from 'react';\nimport { useEvent } from './useEvent';\nimport { EventName, EventListener } from './events';\n\nexport const useWindowEventListener = <K extends EventName<WindowEventMap>>(\n    eventName: K,\n    listener: EventListener<WindowEventMap, K>\n) => {\n    const stableListener = useEvent(listener);\n    React.useEffect(() => {\n        if (!window || !window.addEventListener) {\n            return;\n        }\n        window.addEventListener(eventName, stableListener);\n        return () => window.addEventListener(eventName, stableListener);\n    }, [eventName, stableListener]);\n};\n"],"names":["useIsomorphicLayoutEffect","window","React","useLayoutEffect","useEffect","useEvent","callback","callbackRef","useRef","current","useMemo","useEventListener","eventName","listener","element","stableListener","node","addEventListener","useDocumentEventListener","document","useWindowEventListener"],"mappings":"qBAEaA,IAAAA,EACS,oBAAXC,OAAyBC,EAAMC,gBAAkBD,EAAME,UCErDC,EAAW,SAAqBC,GACzC,IAAMC,EAAcL,EAAMM,OAAOF,GAIjC,OAHAN,EAA0B,WACtBO,EAAYE,QAAUH,IAEnBJ,EAAMQ,QAAQ,WAAA,OAAMH,EAAYE,SAAS,KCNvCE,EAAmB,SAI5BC,EACAC,EACAC,GAEA,IAAMC,EAAiBV,EAASQ,GAChCX,EAAME,UAAU,WACZ,IAAMY,EAAOF,EAAQL,QACrB,GAAKO,GAASA,EAAKC,iBAInB,OADAD,EAAKC,iBAAiBL,EAAWG,GACpBC,WAAAA,OAAAA,EAAKC,iBAAiBL,EAAWG,KAC/C,CAACD,EAASF,EAAWG,KChBfG,EAA2B,SACpCN,EACAC,GAEA,IAAME,EAAiBV,EAASQ,GAChCX,EAAME,UAAU,WACZ,GAAKe,UAAaA,SAASF,iBAI3B,OADAE,SAASF,iBAAiBL,EAAWG,GACxBI,WAAAA,OAAAA,SAASF,iBAAiBL,EAAWG,KACnD,CAACH,EAAWG,KCXNK,EAAyB,SAClCR,EACAC,GAEA,IAAME,EAAiBV,EAASQ,GAChCX,EAAME,UAAU,WACZ,GAAKH,QAAWA,OAAOgB,iBAIvB,OADAhB,OAAOgB,iBAAiBL,EAAWG,GACtBd,WAAAA,OAAAA,OAAOgB,iBAAiBL,EAAWG,KACjD,CAACH,EAAWG"}