{"version":3,"file":"index.module.js","sources":["../src/useIsomorphicLayoutEffect.ts","../src/useEvent.ts","../src/useEventListener.ts","../src/useDocumentEventListener.ts","../src/useWindowEventListener.ts"],"sourcesContent":["import React from 'react';\n\nexport const useIsomorphicLayoutEffect =\n    typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n","import React from 'react';\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect';\n\ntype Callback = (...args: any[]) => any;\n\nexport const useEvent = <C extends Callback>(callback: C): C => {\n    const callbackRef = React.useRef(callback);\n    useIsomorphicLayoutEffect(() => {\n        callbackRef.current = callback;\n    });\n    return React.useMemo(() => callbackRef.current, []);\n};\n","import React from 'react';\nimport { useEvent } from './useEvent';\nimport { events, EventName, EventListener } from '@wiggindev/utils';\n\nexport const useEventListener = <\n    K extends EventName<HTMLElementEventMap>,\n    E extends HTMLElement\n>(\n    eventName: K,\n    listener: EventListener<HTMLElementEventMap, K>,\n    element: React.RefObject<E>\n) => {\n    const stableListener = useEvent(listener);\n    React.useEffect(() => {\n        const node = element.current;\n        if (!node || !node.addEventListener) {\n            return;\n        }\n        events.element.on(node, eventName, stableListener);\n        return () => events.element.off(node, eventName, stableListener);\n    }, [element, eventName, stableListener]);\n};\n","import React from 'react';\nimport { useEvent } from './useEvent';\nimport { events, EventName, EventListener } from '@wiggindev/utils';\n\nexport const useDocumentEventListener = <K extends EventName<DocumentEventMap>>(\n    eventName: K,\n    listener: EventListener<DocumentEventMap, K>\n) => {\n    const stableListener = useEvent(listener);\n    React.useEffect(() => {\n        if (!document || !document.addEventListener) {\n            return;\n        }\n        events.document.on(eventName, stableListener);\n        return () => events.document.off(eventName, stableListener);\n    }, [eventName, stableListener]);\n};\n","import React from 'react';\nimport { events, EventName, EventListener } from '@wiggindev/utils';\nimport { useEvent } from './useEvent';\n\nexport const useWindowEventListener = <K extends EventName<WindowEventMap>>(\n    eventName: K,\n    listener: EventListener<WindowEventMap, K>\n) => {\n    const stableListener = useEvent(listener);\n    React.useEffect(() => {\n        if (!window || !window.addEventListener) {\n            return;\n        }\n        events.window.on(eventName, stableListener);\n        return () => events.window.off(eventName, stableListener);\n    }, [eventName, stableListener]);\n};\n"],"names":["useIsomorphicLayoutEffect","window","React","useLayoutEffect","useEffect","useEvent","callback","callbackRef","useRef","current","useMemo","useEventListener","eventName","listener","element","stableListener","node","addEventListener","events","on","off","useDocumentEventListener","document","useWindowEventListener"],"mappings":"+DAEaA,IAAAA,EACS,oBAAXC,OAAyBC,EAAMC,gBAAkBD,EAAME,UCErDC,EAAW,SAAqBC,GACzC,IAAMC,EAAcL,EAAMM,OAAOF,GAIjC,OAHAN,EAA0B,WACtBO,EAAYE,QAAUH,IAEnBJ,EAAMQ,QAAQ,WAAA,OAAMH,EAAYE,SAAS,KCNvCE,EAAmB,SAI5BC,EACAC,EACAC,GAEA,IAAMC,EAAiBV,EAASQ,GAChCX,EAAME,UAAU,WACZ,IAAMY,EAAOF,EAAQL,QACrB,GAAKO,GAASA,EAAKC,iBAInB,OADAC,EAAOJ,QAAQK,GAAGH,EAAMJ,EAAWG,qBACtBG,EAAOJ,QAAQM,IAAIJ,EAAMJ,EAAWG,KAClD,CAACD,EAASF,EAAWG,KChBfM,EAA2B,SACpCT,EACAC,GAEA,IAAME,EAAiBV,EAASQ,GAChCX,EAAME,UAAU,WACZ,GAAKkB,UAAaA,SAASL,iBAI3B,OADAC,EAAOI,SAASH,GAAGP,EAAWG,GACjBG,WAAAA,OAAAA,EAAOI,SAASF,IAAIR,EAAWG,KAC7C,CAACH,EAAWG,KCXNQ,EAAyB,SAClCX,EACAC,GAEA,IAAME,EAAiBV,EAASQ,GAChCX,EAAME,UAAU,WACZ,GAAKH,QAAWA,OAAOgB,iBAIvB,OADAC,EAAOjB,OAAOkB,GAAGP,EAAWG,GACfG,WAAAA,OAAAA,EAAOjB,OAAOmB,IAAIR,EAAWG,KAC3C,CAACH,EAAWG"}