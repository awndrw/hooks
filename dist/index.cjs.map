{"version":3,"file":"index.cjs","sources":["../src/useIsomorphicLayoutEffect.ts","../src/useEvent.ts","../src/useDocumentEventListener.ts","../src/useEventListener.ts","../src/useWindowEventListener.ts"],"sourcesContent":["import React from 'react';\n\nexport const useIsomorphicLayoutEffect =\n    typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n","import React from 'react';\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect';\n\ntype Callback = (...args: any[]) => any;\n\nexport const useEvent = <C extends Callback>(callback: C): C => {\n    const callbackRef = React.useRef(callback);\n    useIsomorphicLayoutEffect(() => {\n        callbackRef.current = callback;\n    });\n    return React.useMemo(() => callbackRef.current, []);\n};\n","import React from 'react';\nimport { useEvent } from './useEvent';\nimport { EventName, EventListener } from './events';\n\nexport const useDocumentEventListener = <K extends EventName<DocumentEventMap>>(\n    eventName: K,\n    listener: EventListener<DocumentEventMap, K>\n) => {\n    const stableListener = useEvent(listener);\n    React.useEffect(() => {\n        if (!document || !document.addEventListener) {\n            return;\n        }\n        document.addEventListener(eventName, stableListener);\n        return () => document.addEventListener(eventName, stableListener);\n    }, [eventName, stableListener]);\n};\n","import React from 'react';\nimport { useEvent } from './useEvent';\nimport { EventName, EventListener } from './events';\n\nexport const useEventListener = <\n    K extends EventName<HTMLElementEventMap>,\n    E extends HTMLElement\n>(\n    eventName: K,\n    listener: EventListener<HTMLElementEventMap, K>,\n    element: React.RefObject<E>\n) => {\n    const stableListener = useEvent(listener);\n    React.useEffect(() => {\n        const node = element.current;\n        if (!node || !node.addEventListener) {\n            return;\n        }\n        node.addEventListener(eventName, stableListener);\n        return () => node.addEventListener(eventName, stableListener);\n    }, [element, eventName, stableListener]);\n};\n","import React from 'react';\nimport { useEvent } from './useEvent';\nimport { EventName, EventListener } from './events';\n\nexport const useWindowEventListener = <K extends EventName<WindowEventMap>>(\n    eventName: K,\n    listener: EventListener<WindowEventMap, K>\n) => {\n    const stableListener = useEvent(listener);\n    React.useEffect(() => {\n        if (!window || !window.addEventListener) {\n            return;\n        }\n        window.addEventListener(eventName, stableListener);\n        return () => window.addEventListener(eventName, stableListener);\n    }, [eventName, stableListener]);\n};\n"],"names":["useIsomorphicLayoutEffect","window","React","useLayoutEffect","useEffect","useEvent","callback","callbackRef","useRef","current","useMemo","eventName","listener","stableListener","document","addEventListener","element","node"],"mappings":"+GAEaA,EACS,oBAAXC,OAAyBC,EAAAA,QAAMC,gBAAkBD,EAAAA,QAAME,UCErDC,EAAW,SAAqBC,GACzC,IAAMC,EAAcL,EAAK,QAACM,OAAOF,GAIjC,OAHAN,EAA0B,WACtBO,EAAYE,QAAUH,IAEnBJ,UAAMQ,QAAQ,WAAA,OAAMH,EAAYE,SAAS,sCCNZ,SACpCE,EACAC,GAEA,IAAMC,EAAiBR,EAASO,GAChCV,EAAAA,QAAME,UAAU,WACZ,GAAKU,UAAaA,SAASC,iBAI3B,OADAD,SAASC,iBAAiBJ,EAAWE,GACxBC,WAAAA,OAAAA,SAASC,iBAAiBJ,EAAWE,KACnD,CAACF,EAAWE,iDCXa,SAI5BF,EACAC,EACAI,GAEA,IAAMH,EAAiBR,EAASO,GAChCV,UAAME,UAAU,WACZ,IAAMa,EAAOD,EAAQP,QACrB,GAAKQ,GAASA,EAAKF,iBAInB,OADAE,EAAKF,iBAAiBJ,EAAWE,GACpBI,WAAAA,OAAAA,EAAKF,iBAAiBJ,EAAWE,KAC/C,CAACG,EAASL,EAAWE,wEChBU,SAClCF,EACAC,GAEA,IAAMC,EAAiBR,EAASO,GAChCV,EAAAA,QAAME,UAAU,WACZ,GAAKH,QAAWA,OAAOc,iBAIvB,OADAd,OAAOc,iBAAiBJ,EAAWE,GACtBZ,WAAAA,OAAAA,OAAOc,iBAAiBJ,EAAWE,KACjD,CAACF,EAAWE"}